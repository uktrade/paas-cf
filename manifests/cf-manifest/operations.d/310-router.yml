---

- type: remove
  path: /instance_groups/name=router/vm_extensions

- type: remove
  path: /instance_groups/name=tcp-router/vm_extensions

- type: replace
  path: /instance_groups/name=router/jobs/-
  value:
    name: haproxy
    release: paas-haproxy
    properties:
      request_timeout_in_seconds: 900
      ha_proxy:
        enable_proxy_protocol: true
        disable_http: true
        go_router:
          servers: [ "127.0.0.1" ]
          port: 80
          healthcheck_port: 8080
        additional_frontend_config: |
          capture response header strict-transport-security len 128
          http-response add-header Strict-Transport-Security max-age=31536000;\ includeSubDomains;\ preload unless { capture.res.hdr(0) -m found }
        enable_healthcheck_frontend: true
        ssl_pem: "((router_ssl.certificate))((router_ssl.private_key))"
        enable_http_redirect_frontend: true
        enable_proxy_frontend: true

  # Upstream uses application_ca and service_cf_internal_ca
  # We want to use these but also rotate them
  #
  # We also want to use the uaa_ca (and uaa_ca_old)
  # so we can have TLS between gorouter and UAA
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/ca_certs?
  value: ((application_ca.certificate))((application_ca_old.certificate))((service_cf_internal_ca.certificate))((service_cf_internal_ca_old.certificate))((uaa_ca.certificate))((uaa_ca_old.certificate))

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/drain_wait?
  value: 120

- type: remove
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/tls_pem

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/enable_ssl
  value: false

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/status/user
  value: router_user

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/http_rewrite?
  value:
    responses:
      add_headers_if_not_present:
        - name: Strict-Transport-Security
          value: max-age=31536000; includeSubDomains; preload

- type: replace
  path: /instance_groups/name=router/networks/0/name
  value: router

- type: replace
  path: /instance_groups/name=router/vm_extensions?/-
  value: cf_router_target_groups

- type: replace
  path: /instance_groups/name=tcp-router/vm_extensions?/-
  value: cf_tcp_router_target_groups
